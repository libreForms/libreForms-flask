{% extends 'base.html.jinja' %}
{% block content %}
 
<form title="create_report" method="post">
  <fieldset>
    <div title="name" class="form-group">
      <label class="form-label mt-4 required" for="name" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter a name for the new report (100 chars max)">Name</label>
      <input class="form-control" type="text" id="name" name="name" value="{{ report.name if report else ''}}" maxlength="100" required/>
    </div>
    
    <!-- <div class="form-group">
      <label class="form-label mt-4 required" for="form_name" data-bs-toggle="tooltip" data-bs-placement="right" title="Select the form for which you'd like to generate a report">Frequency</label>
      <select id="form_name" name="form_name">
        {% for form in forms %}
        <option value="{{ form }}">{ form }}</option>
        {% endfor %}
      </select>
    </div> -->

    <div title="filters" class="form-group">
      <label class="form-label mt-4 required" for="filters" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter any filters you want to apply (300 chars max)">Filters</label><span data-bs-toggle="tooltip" data-bs-placement="right" title="Click me for help"><button class="btn btn-link btn-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#filterHelp" aria-controls="filterHelp">(?)</button></span>
      <textarea class="form-control" rows="3" id="filters" name="filters" maxlength="300" onchange = "validateFilter(this.form.filters.value);" required>{{ report.filters if report else '$()'}}</textarea>
      <div class="valid-feedback">These filters are valid!</div>
      <div class="invalid-feedback">These filters are invalid! Click the (?) above for more information.</div>    
    </div>

    <div title="frequency" class="form-group">
      <label class="form-label mt-4 required" for="frequency" data-bs-toggle="tooltip" data-bs-placement="right" title="Select the frequency you'd like to receive the report at">Frequency</label>
      <select class="form-control" id="frequency" name="frequency" required>
        <option value="hourly"{%if report and report.frequency == 'hourly'%} selected="selected"{%endif%}>Hourly</option>
        <option value="daily"{%if report and report.frequency == 'daily'%} selected="selected"{%endif%}>Daily</option>
        <option value="weekly"{%if report and report.frequency == 'weekly'%} selected="selected"{%endif%}>Weekly</option>
        <option value="monthly"{%if report and report.frequency == 'monthly'%} selected="selected"{%endif%}>Monthly</option>
        <option value="annually"{%if report and report.frequency == 'annually'%} selected="selected"{%endif%}>Annually</option>
        <option value="manual"{%if report and report.frequency == 'manual'%} selected="selected"{%endif%}>Manual</option>
      </select>
    </div>


    <div title="time_condition" class="form-group">
      <label class="form-label mt-4 required" for="time_condition" data-bs-toggle="tooltip" data-bs-placement="right" title="Select the timeframe for the reports you'd like captured by this report">Forms Included</label>
      <select class="form-control" id="time_condition" name="time_condition" required>
        <option value="created_since_last_run"{%if report and report.time_condition == 'created_since_last_run'%} selected="selected"{%endif%}>{{form_name}} forms created since last run</option>
        <option value="modified_since_last_run"{%if report and report.time_condition == 'modified_since_last_run'%} selected="selected"{%endif%}>{{form_name}} forms modified since last run</option>
        <option value="created_all_time"{%if report and report.time_condition == 'created_all_time'%} selected="selected"{%endif%}>{{form_name}} forms created all time</option>
        <option value="created_last_hour"{%if report and report.time_condition == 'created_last_hour'%} selected="selected"{%endif%}>{{form_name}} forms created in the last hour</option>
        <option value="created_last_day"{%if report and report.time_condition == 'created_last_day'%} selected="selected"{%endif%}>{{form_name}} forms created in the last day</option>
        <option value="created_last_weekly"{%if report and report.time_condition == 'created_last_weekly'%} selected="selected"{%endif%}>{{form_name}} forms created in the last week</option>
        <option value="created_last_month"{%if report and report.time_condition == 'created_last_month'%} selected="selected"{%endif%}>{{form_name}} forms created in the last month</option>
        <option value="created_last_year"{%if report and report.time_condition == 'created_last_year'%} selected="selected"{%endif%}>{{form_name}} forms created in the last year</option>
      </select>
    </div>
    
    <div title="start_at" class="form-group">
      <label class="form-label mt-4" for="start_at" data-bs-toggle="tooltip" data-bs-placement="right" title="Select the starting date (defaults to today)">Start Date</label>
      <input class="form-control" type="date" id="start_at" name="start_at" value="{{ report.start_at_human_readable if report else ''}}"/>
    </div>

    <div title="end_at" class="form-group">
      <label class="form-label mt-4" for="end_at" data-bs-toggle="tooltip" data-bs-placement="right" title="Select the ending date (defaults to never)">End Date</label>
      <input class="form-control" type="date" id="end_at" name="end_at" value="{{ report.end_at_human_readable if report else ''}}"/> 
    </div>

    <div title="submit" class="form-group mt-4">
      <input type="submit" value="Submit" class="btn btn-primary" />    
    </div>
  </fieldset>
</form> 


{% endblock %}


{% block addons %}

<div class="offcanvas offcanvas-bottom"  style="z-index:999998 !important;" tabindex="-1" id="filterHelp" aria-labelledby="filterHelpLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="filterHelpLabel">Using Report Filters</h5>
    <button title="dismiss" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <div>
      <p>Report filters are used to filter results that will be captured by each report, using comma-separated conditions encapsulated by parentheses
        and immediately preceded by a dollar sign, see examples below. All conditions described here must be met in order for the report to be sent. 
        You may include a space between conditions and operators. The left field should always contain the name of a form field you are querying, 
        while the right field should contain some value that the system can match. String values must be encapsulated by single or double quotes. 
        These conditions should employ standard Python operators, see <a href="https://www.w3schools.com/python/python_operators.asp">
        https://www.w3schools.com/python/python_operators.asp</a>.</p>
      <h6>Examples</h6>
      <ul>
        <table role="presentation">
        <tr><td><li><code>$(Team_Name == "Budget"),</code></td><td> Matches with documents that have a field "Team_Name" that is equal to "Budget".</li></td></tr>
        <tr><td><li><code>$(Team_Name != 'Marketing'),</code></td><td> Matches with documents that have a field "Team_Name" that is not equal to "Marketing".</li></td></tr>
        <tr><td><li><code>$(Ping_rate > 300),</code></td><td> Matches with documents that have a field "Ping_rate" that is greater than 300.</li></td></tr>
        <tr><td><li><code>$(Owner == 'john.smith'),</code></td><td> Matches with documents that have a field "Owner" that is equal to "john.smith".</li></td></tr>
        <tr><td><li><code>$(Proposed_Cost == "$100,000"),</code></td><td> Matches with documents that have a field "Proposed_Cost" that is equal to "$100,000".</li></td></tr>
        </table>
      </ul>
    </div>
  </div>
</div>


{% endblock %}

{% block js %}


async function validateFilter(s) {

  const foo = document.getElementById("filters")

  let payload = {
    string: s
  };

  let response = await fetch('{{ url_for ('reports.view_lint_filters') }}', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json;charset=utf-8'
    },
    body: JSON.stringify(payload)
  });
  
  let result = await response.json();

  if (result['status'] == 'success') {
    foo.classList.remove("is-invalid")
    foo.classList.add("is-valid")
  } else {
    foo.classList.add("is-invalid")
    foo.classList.remove("is-valid")
  }
}

{% endblock %}