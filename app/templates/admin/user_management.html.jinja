{% extends 'base.html.jinja' %}
{% block content %}

<h4>Users</h4>
<div class="list-group vh-100 scrollable overflow-auto table table-hover">
    <table role="presentation" title="user table" class="table {{'text-dark' if not dark_mode else 'table-hover'}}">
        <thead>
            <tr>
                <th>

                    <input type="checkbox" id="select-all" onclick="toggleCheckboxes(this)"><a style="padding-left:3px;" class="dropdown-toggle" data-bs-toggle="dropdown" data-bs-placement="right" role="button" aria-haspopup="true" aria-expanded="false" href="#"></a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item toggle-link" href="javascript:void(0);" onclick="passMultipleFields('/admin/toggle/users')" >Toggle Active Status</a>
                        <a class="dropdown-item toggle-link" href="javascript:void(0);" onclick="passMultipleFields('/admin/refresh/users')" >Refresh Selected Users</a>
                    </div> 

                </th>
                <th>id</th>
                <th>email</th>
                <th>username</th>
                <th>group</th>
                <th>organization</th>
                <th>phone</th>
                <th>active</th>
                <th>created date</th>
                <th>last login</th>
            </tr>
        </thead>
        <tbody>
        {% for row in user_list %}
            <tr class="table{% if emphasize and item in emphasize %}-secondary{% else %}{{'-dark' if dark_mode else '-transparent'}}{% endif %}" style="{% if not row.active  %}opacity: 0.6; {% endif %}">
                <td>
                    <input type="checkbox" class="user-checkbox" value="{{ row.username }}">
                </td>
                <td>{{ row.id }}</td>
                <td>{{ row.email }}</td>
                <td>
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" data-bs-placement="right" role="button" aria-haspopup="true" aria-expanded="false" href="#">{{ row.username }}</a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="{{url_for('auth.other_profiles',username=row.username)}}">View User</a>
                        <a class="dropdown-item" href="{{url_for('admin.edit_profile',username=row.username)}}">Edit User Profile</a>
                        <a class="dropdown-item" href="{{url_for('admin.toggle_user_active_status', username=row.username)}}">{{"Deactivate" if row.active else "Activate"}} User</a>
                        <a class="dropdown-item" href="{{url_for('admin.generate_random_password', username=row.username)}}">Reset Password</a>
                        <a class="dropdown-item" href="{{url_for('admin.generate_api_key', username=row.username)}}">Generate API key</a>

                        <form action="{{ url_for('admin.modify_user_group', username=row.username) }}" method="post" class="dropdown-item">
                            <div class="row">
                                <label for="group-input-{{ row.username }}" class="col-form-label col-4">Change Group</label>
                                <div class="col-8">
                                    <input type="text" id="group-input-{{ row.username }}" name="group" value="{{ row.group }}" onkeyup="submitOnEnter(event, this.form)" class="form-control" placeholder="Enter new group">
                                </div>
                            </div>
                        </form>
                    </div> 
                </td>
                <td>{{ row.group }}</td>
                <td>{{ row.organization }}</td>
                <td>{{ row.phone }}</td>
                <td>{{ row.active }}</td>
                <td>{{ row.created_date }}</td>
                <td>{{ row.last_login }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</div>

{% endblock %}

{% block js %}
<script>
    function submitOnEnter(event, form) {
        if (event.key === "Enter") {
            event.preventDefault();
            form.submit();
        }
    }

    function toggleCheckboxes(source) {
        checkboxes = document.getElementsByClassName('user-checkbox');
        for(var i=0, n=checkboxes.length;i<n;i++) {
            checkboxes[i].checked = source.checked;
        }
    }

    function passMultipleFields(route) {
        var checkboxes = document.getElementsByClassName('user-checkbox');
        var form = document.createElement('form');
        form.method = 'POST';
        // form.action = '/admin/toggle/users';
        form.action = route;

        Array.from(checkboxes).forEach((checkbox, index) => {
            if (checkbox.checked) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'usernames';
                input.value = checkbox.value;
                form.appendChild(input);
            }
        });

        document.body.appendChild(form);
        form.submit();
    }

</script>
{% endblock %}
